spring:
  application:
    name: MessagingService
  main:
    banner-mode: 'off'

  datasource:
    url: jdbc:postgresql://localhost:5432/messagingService
    username: admin
    password: pass
    driver-class-name: org.postgresql.Driver

  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: validate

  liquibase:
    change-log: 'classpath:db/changeLog.xml'

  activemq:
    broker-url: tcp://localhost:61616
    user: admin
    password: admin

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8500/realms/message-service/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8500/realms/message-service
        registration:
          gateway-client:
            provider: keycloak
            client-id: service-client
            client-secret: n0EdE1JjWbCBjz8JfRZI0qKbWZWS7piW
            authorization-grant-type: authorization_code
            scope: openid

server:
  port: 8801

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan: com.colvir

management:
  endpoints.web.exposure.include: 'prometheus, metrics, info, health, env'
  endpoint:
    metrics:
      access: read_only
    prometheus:
      access: read_only
  prometheus:
    metrics:
      export:
        enabled: true